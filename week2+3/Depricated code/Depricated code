Login servlet:

//        try {
//            BufferedReader in = new BufferedReader(new FileReader(file));
//            String str;
//            while ((str = in.readLine()) != null) {
//
//                String[]ar = str.split("-");
//                if (email.equals(ar[0])&&password.equals(ar[1])){
//                    user = ar[3]+" "+ar[2];
//                    succes=true;
//                    break;
//                }
//            }
//
//            in.close();
//        } catch (IOException e) {
//            System.out.println("File Read Error");
//        }

//        String loggedusers = req.getServletContext().getRealPath("/")+"loggedusers.txt";
//        PrintWriter pw = new PrintWriter(new FileWriter(loggedusers));
//        pw.println(email);
//        pw.flush();
//        pw.close();

//        String file = req.getServletContext().getRealPath("/")+"users.txt";

//        req.setAttribute("succes","<div class=\"alert alert-success\" role=\"alert\" style=\"margin-top:20px;\">Login succesvol.</div>");

Register Servlet

            //String file = req.getServletContext().getRealPath("/")+"users.txt";
            //BufferedWriter out = new BufferedWriter(new FileWriter(file,true));
			//out.write(email +"-"+ password +"-"+ firstname +"-"+ surName +"-"+ address +"-"+ country+ "\n");
            //out.close();

Logout Servlet

        String loggedusers = req.getServletContext().getRealPath("/")+"loggedusers.txt";
        //removeLineFromFile(loggedusers, ((User)req.getSession().getAttribute("loggedInuser")).getEmail());

public void removeLineFromFile(String file, String lineToRemove) {
        try {
            File inFile = new File(file);

            if (!inFile.isFile()) {
                System.out.println("Parameter is not an existing file");
                return;
            }

            //Construct the new file that will later be renamed to the original filename.
            File tempFile = new File(inFile.getAbsolutePath() + ".tmp");

            BufferedReader br = new BufferedReader(new FileReader(file));
            PrintWriter pw = new PrintWriter(new FileWriter(tempFile));

            String line = null;

            //Read from the original file and write to the new
            //unless content matches data to be removed.
            while ((line = br.readLine()) != null) {
                if (!line.trim().equals(lineToRemove)) {
                    line = line.replace("\n", "");
                    pw.println(line);
                    pw.flush();
                }
            }
            pw.close();
            br.close();

            //Delete the original file
            if (!inFile.delete()) {
                System.out.println("Could not delete file");
                return;
            }

            //Rename the new file to the filename the original file had.
            if (!tempFile.renameTo(inFile))
                System.out.println("Could not rename file");

        }
        catch (FileNotFoundException ex) {
            ex.printStackTrace();
        }
        catch (IOException ex) {
            ex.printStackTrace();
        }
    }

registration.jsp



            if (errorMessage != null) errorMessage = (String) request.getAttribute("errorMessage");
            if (userNameNull != null) userNameNull = nullError;
            if (realNameNull != null) realNameNull = nullError;
            if (emailNull != null) emailNull = nullError;
            if (emailRepeatError != null) emailRepeatError = nullError;
            if (passwordNull != null) passwordNull = nullError;
            if (passwordRepeatError != null) passwordRepeatError = nullError;
            if (addressNull != null) addressNull = nullError;
            if (countryNull != null) countryNull = nullError;